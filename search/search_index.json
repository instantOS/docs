{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to instantOS","text":"<p>You can learn how to use instantOS by adding one feature at a time to your workflow. Each feature lists what you need to know to understand it and links to documentation pages where you can learn those things.</p> <p>Each feature has a short video explaining it or a text based description below it if you prefer that.</p>"},{"location":"#useful-links","title":"Useful links","text":"<ul> <li>Keybindings</li> <li>instantOS Website</li> <li>YouTube</li> <li>Discord</li> <li>Donate</li> <li>Documentation source code</li> </ul>"},{"location":"alttab/","title":"Alt-tab menus","text":"Required skills <p>Tags</p> <p>If you are coming from Windows or another desktop environment, you are likely familiar with alt-tab menus. To use it, hold down alt and press tab multiple times to toggle through a list of all open applications. Letting go of alt, pressing enter or click on an entry will switch to the application. You can also press tab just a single time and proceed to type in the application name. There is also a more visual version available. It can be accessed using Super+^ (the caret key) or by right clicking on the status bar in the top right.</p>"},{"location":"apps/","title":"Starting applications","text":"Required skills <p>Shortcuts</p> <p>Opening applications can be done in several ways.</p>"},{"location":"apps/#graphical-launcher","title":"Graphical launcher","text":"<p>The most beginner friendly one is probably the graphical launcher.  It is accessed by clicking on the desktop or status bar, pressing space on an empty tag or with Super+Y. You can search through applications and press return or click on them to launch them. More frequently used applications will appear further up in the list.</p> <p>Technical note: the graphical launcher uses xdg desktop files for its entries, meaning that only applications that provide such files will appear. This is the same principle found in desktop environments such as gnome.</p>"},{"location":"apps/#text-based-launcher","title":"Text based launcher","text":"<p>There is also a smart text based launcher. It can be accessed using Super+Space or by right clicking on the desktop. This launcher is using $PATH for its entries meaning that pretty much all applications are accessible from here.  That includes applications that do not open any windows like grep or htop. Just like the graphical launcher this launcher remembers frequently used applications and puts them higher up in the list.  This launcher can also be used to run applications with specific arguments or from absolute paths.</p> <p>It also has a few different modes. You can switch between them using Shift + Left/Right Arrow The default normal mode is using $PATH and executes the given application.  The terminal mode works just like normal mode but launches the application inside of a terminal. This can be useful if you want to check the logs of a GUI application or want to open a CLI application.</p> <p>The third mode uses the xdg desktop entries as the application list and can be used to launch programs that do not have an entry in $PATH like some proprietary programs and wine programs.</p>"},{"location":"apps/#dmenu-like-menu","title":"dmenu like menu","text":"<p>This behaves exactly like dmenu. Nothing special about it. type in a command and press enter to run it. It can be accessed Super+Ctrl+Space or by middle clicking on the desktop.</p>"},{"location":"apps/#troubleshooting","title":"Troubleshooting","text":""},{"location":"apps/#my-program-doesnt-appear","title":"My program doesn't appear","text":"<p>some programs, mostly proprietary ones install to locations outside of $PATH and Windows programs installed using wine. As an example, Davinci Resolve installs to /opt which is not part of $PATH and does not appear in the text based launcher. It does however provide a desktop file meaning that it is accessible from the graphical menu. Some applications do not provide desktop files at all and are installed into directories not included in $PATH. In that case you can either add that directory to PATH or execute the program using its absolute path. In the case of Davinci resolve that would be /opt/resolve/bin/resolve. Wine programs can directly be invoked using wine /path/to/program.exe</p>"},{"location":"apps/#dafuq-is-path","title":"dafuq is $PATH ?!","text":"<p>$PATH is an environment variable containing a list of directories. If you execute a command then Linux goes through all those directories and checks if any of them contain an executable with that name. It then stops and executes that application.</p>"},{"location":"apps/#none-of-the-launchers-are-present-on-my-system","title":"None of the launchers are present on my system","text":"<p>You likely installed instantWM on an existing system. instantWM is just a window manager does not include any other programs. These have to be installed separately from http://packages.instantos.io.. It is also a lot harder to provide support for these frankensteined systems since lots of things can vary depending on what your base system looks like.</p>"},{"location":"audio/","title":"Audio","text":"Required skills <p>instantASSIST</p> <p>The most simple way to change volume is to hover over the status text and scroll with the mouse wheel.  To only use the keyboard you can either use the media keys if you have those or the a-assist, that means opening up instantASSIST using Super+A and pressing the a key.  This brings up a volume slider. You can use the arrow keys, the j/k keys or +/- to change volume now. You can also use the mouse to drag or click on the slider.  To set it to a specific value, type in the number and confirm with the return key.  To close the slider, press any button that is not in use by the slider already or right click on it.  Middle click on it to reset it to the value that is was at when opening it up.</p> <p>You can also set the volume of individual applications. To do this, ++super+shift+click++ on the status text or go into the Sound section of the control panel.  Here you can set the volume for each application with a separate slider.</p> <p>The settings to change input/output devices can also be found here.</p>"},{"location":"close/","title":"Closing applications","text":""},{"location":"close/#closing-windows","title":"Closing windows","text":"<p>Closing applications can be done in several ways. Super+Q and Alt+F4 both work. There also is a close button on the left side of the blue window title.  A window can be directly closed from the window bar by middle clicking on its name. When a window is floating it can additionally be closed by middle clicking while hovering outside the green border.</p>"},{"location":"close/#locking-windows","title":"Locking windows","text":"<p>Right clicking on the close button will lock the window. This will prevent the window from getting closed until it is unlocked again. Overlays will by default be locked but can be unlocked just like any other window.</p>"},{"location":"customize/","title":"Customizing instantOS","text":"<p>instantOS has an \"it just works\" philosophy so it shouldn't be necessary to change large parts of it. It is recommended to learn the default keybindings and how to use the OS with the default setup before changing it.</p>"},{"location":"customize/#settings-manager","title":"Settings manager","text":"<p>The control panel can be opened by Super+Left clicking on the status text, with Super+Ctrl+C, from the start menu or by typing instantsettings in the terminal.</p>"},{"location":"customize/#dotfiles","title":"Dotfiles","text":"<p>You might prefer not using the included settings manager and would rather hack together your own setup. The dotfiles setting opens up a config file in vim. Here you can manage which dotfiles are managed and updated by instantOS and which can be manually edited. The instantOS section also allows disabling the management for all dotfiles and disabling the built in theming.</p>"},{"location":"customize/#theming","title":"Theming","text":"<p>Lots of themes are managed by instantOS. This includes Gtk, Qt, Terminal colors, rofi (application launcher) and dunst (notification daemon). This enables things like automatically switching to a dark mode at night. You can disable all theme management in the appearance section of the settings panel. After doing that, you can set up your own themes for all of the above applications</p>"},{"location":"customize/#terminal","title":"Terminal","text":"<p>instantOS uses st as its terminal emulator. The colors are customized using the ~/.Xresources file. You can also roll your own st build if you want to and instantOS will use it instead of the default one as long as it's installed in /usr/local/bin</p>"},{"location":"customize/#gtk","title":"Gtk","text":"<p>The appearance section of the control panel allows changing the Gtk theme, font, icon set and cursor.</p>"},{"location":"customize/#rework-notice","title":"Rework notice","text":"<p>The theming system is planned to get a rework basing it around imosid once it is stable enough. This will prevent it from ever accidentally overwriting any user customisations while not requiring to be completely disabled if the user wants to customize on a file level.</p>"},{"location":"donate/","title":"Donations","text":"<p>instantOS is developed entirely in my free time and through contributions of volunteers. It is completely open source with no stream of revenue besides donations. If you like instantOS, please consider donating through one of the ways listed below. </p> <p>Patreon</p> <p>Buymeacoffee</p> <p>PayPal</p> <p>LiberaPay</p>"},{"location":"drawing/","title":"Window drawing","text":"<p>The window drawing feature works similar to plan9's rio window manager.  To use it, press Super+Shift+D or click on the far right of the blue window title indicator. Your cursor will change to a cross-hair. You can now drag out a rectangle and letting go of the left mouse button makes the current window take that size. You can also draw on different monitors. Clicking on a different window while in drawing mode will move the current window on top of it and copy its dimensions.</p> <p>Todo</p> <p>video/gif demonstration</p>"},{"location":"filesearch/","title":"File search on instantOS","text":""},{"location":"filesearch/#file-explorer","title":"File explorer","text":"<p>The default file explorer in instantOS is gnome's nautilus. It comes with an excellent file search engine that can be accessed by just typing the search term with nautilus in focus or clicking on the magnifying glass in the top right. It searches recursively through the current directory preferring more direct matches that are higher up in the file tree. It can however slow down when searching through large amounts of files. For a faster option, see the instantSEARCH section below.</p>"},{"location":"filesearch/#instantsearch","title":"instantSEARCH","text":"<p>instantOS comes with a tool called instantSEARCH. It is accessed with the shortcut Super+Alt+F. It is using mlocate and plocate as a backend and works by scanning your entire hard drive first to build and index that it then searches through that index for your search term. This allows you to search through everything on your entire drive in less than a second (tested with over 500000 files on my archive HDD). This has the drawback that running it for the first time will take a while and new files only appear after scanning for changes. Re-scanning with an existing database will take considerably less time though. After opening instantSEARCH type in your search term and a list of matches will pop up. This list itself can be navigated by searching or using the arrow keys or mouse. Opening an item will bring up a file opener. The last choice on how to open a file of this type will be remembered under default, so in most cases you can just hit enter to open with your preferred program. xdg open and rifle will behave like the file is being opened in either a graphical file manager or ranger respectively. For files you also have the option to open the directory that contains the file. Choosing an option in these dialogues can be done using the usual ways or by typing the number next to the option. Past search terms and matched files are saved to grant quick access to items that are in frequent use.  As an example, you close a file you're using either to save restores or by accident and need it again, you can just open instantSEARCH and hit enter three times to open it back up.</p> <p>Todo</p> <p>video/gif demonstration</p>"},{"location":"floating/","title":"floating windows","text":""},{"location":"floating/#basic-explanation","title":"Basic explanation","text":"<p>Each window has two modes: Floating and tiling. Tiling is explained here Floating mode allows you to freely move and resize any window.</p>"},{"location":"floating/#activating-floating-mode","title":"Activating floating mode","text":"<p>To make a window float, press Super+Shift+Space. Alternatively you can just move the window (see \"Moving Windows\" below) and it'll go into floating mode automatically. To make a window return to the tiling layout, either do Super+Shift+Space again or drag it to the top of the display and let go of it just like with regular desktop environments.</p>"},{"location":"floating/#moving-windows","title":"Moving windows","text":"<p>To move a floating window, hold down the Super key and move it around using the left mouse button. You can also move it by dragging out its title indicator like on regular desktop environments. This will work no matter where the window is, the cursor will be warped to the window.</p>"},{"location":"floating/#resizing-windows","title":"Resizing windows","text":"<p>Super + Right mouse button resizes a window. The cursor will snap to the nearest corner/edge and resize from there.</p> <p>Hovering the mouse near the outside border of the current floating window (green border) will make the cursor turn into a cross-hair. You can then resize the window by left click dragging the border or move it by dragging the top.</p> <p>The window-drawing feature can also be used to resize and move windows</p>"},{"location":"floating/#dragging-gestures","title":"Dragging gestures","text":"<p>Dragging a window onto a tag number and letting go of it will move it to that number and follow it there. Holding shift while letting go will move it there but keep the view focused on the current tag. Dragging the green indicator on the tag numbers will move the currently active window to that tag number. Holding shift while letting go will follow the window there.</p> <p>Dragging a window to the side of the screen and letting go of it with the shift key held down will snap it to half of the screen like on traditional desktop environments.</p> <p>Dragging a window to the left/right side of the screen and letting go of it will move it to the adjacent tag. The lower third of the screen will move it there and not follow it, anything above that will follow the window to that tag.</p>"},{"location":"fullscreen/","title":"Fullscreen","text":""},{"location":"fullscreen/#fullscreen-apps","title":"Fullscreen apps","text":"<p>Applications that are in fullscreen like a YouTube video or game work just like on any other DE as in they take the entire screen and cover any UI elements. They can however still be moved to other tags or you can switch to another tag to still retain multitasking functionality.</p>"},{"location":"fullscreen/#tempfullscreen","title":"Tempfullscreen","text":"<p>This feature allows you to temporarily put a window into fullscreen mode without impacting any of the other windows or its actual position and size. It can be activated using Super+Ctrl+F and using it a second time restores the window to its normal behavior.</p> <p>For example you could be in the grid layout working with lots of windows but would like to examine the contents of a window using the entire screen. Instead of switching to the monocle layout and resizing all other windows as well the tempfullscreen feature can be used to enlarge and then shrink the window back down.</p>"},{"location":"fullscreen/#fakefullscreen","title":"Fakefullscreen","text":"<p>Fakefullscreen allows you to resize and move fullscreen windows. The application will still think it is in full screen.  This can be used to move applications that would otherwise be stuck on the monitor they launched on or to correct applications that behave incorrectly.</p> <p>To toggle fakefullscreen, press Super+Shift+F. If the application is not already in fullscreen, this will not have any noticeable effect.  But as soon as the application goes into fullscreen, it will not cover the entire screen, but can still be put into layouts, moved around in floating mode or even resized. Some applications will not like being resized while in full screen mode, so be careful with that. Fakefullscreen can also be activated for applications that are already in fullscreen mode.  Pressing Super+Shift+F a second time will deactivate fakefullscreen.</p> <p>Applications for this are forcing games that like to appear in fullscreen and on the wrong monitor to behave and make video players or websites that don't support picture-in-picture functionality \"support\" it by entering fullscreen mode and then floating them around with fakefullscreen.</p>"},{"location":"getting%20started/","title":"Get started","text":"<p>// Todo</p>"},{"location":"hotkeys/","title":"Keybindings reference","text":"<p>This is a rundown of all keybindings. They are just for reference, to properly learn instantOS, refer to the documentation.</p> <p>You can access this list by pressing super+F1</p>"},{"location":"hotkeys/#general","title":"General","text":"Binding Functionality Super+Space Open text based application launcher Super+Ctrl+Space Open super lightweight command launcher Super+Shift+Space Toggle window between floating and tiling Super+Q Close Application Super+C Grid layout Super+M Monocle layout Super+Number Switch to tag number Super+Tab Switch between two most recent tags Super+Shift+Tab Switch to last window Super+Shift+Number Move window to tag number Super+Enter Open terminal Super+Shift+Enter Move window into master area Super+Ctrl+Number Toggle on additional tag Super+Alt+Number Follow window to tag number Super+Shift+Comma/Period Move window to other monitor Super+Alt+Comma/Period Move and follow window to other monitor Super+J/K Switch focus Super+Ctrl+J/K Move window through stack Super+Y Open graphical application launcher Super+Ctrl+W Define overlay Super+W Toggle overlay Super+E Go into overview mode, press again to switch back Super+Shift+E Overview mode but all windows are stacked Alt+Tab Open application switcher Alt+F4 Close Application Super+Ctrl+L Lock screen Super+Ctrl+Q Open shutdown menu Super+Ctrl+Shift+Q Restart Window Manager Super+A Open instantASSIST Super+Shift+A Repeat last instantASSIST action Super+Alt+Space Switch keyboard layout Super+G Notification center Super+Left/Right Switch to adjacent tag Super+Shift+Left/Right Move Window to adjacent tag Overlay: Super+Shift+Arrows Switch overlay modes Super+Alt+Left/Right Follow Window to adjacent tag Super+up/down Switch focus Super+Comma/Period Switch monitor focus Super+Ctrl+Comma/Period Cycle through all layouts Super+B Toggle status bar Super+Alt+S Toggle tag icons Super+Shift+S Move application to scratchpad Super+S Toggle scratchpad Super+Ctrl+S Make current window sticky Super+Ctrl+Shift+S Hide empty tags Super+Alt+Shift+S Toggle animations Super+N Open file manager Super+R Open Ranger Super+F Disable Tiling for current tag Super+I Increase number of windows in Master area Super+D Decrease number in Master area (0 -&gt; no master) Super+H/L Resize Master area Super+Shift+H/J/K/L Move floating window Super+Alt+H/J/K/L Resize floating window Super+Alt+W Center floating window Super+P Switch between two most recent layouts Super+X Open application switcher Super+^ Open graphical application switcher Super+Shift+D Enter window drawing mode Super+Ctrl+H Minimize window Super+Ctrl+Alt+H unminimize all windows Super+Shift+Alt+D Toggle performance modes Super+Shift+M Enter move mode Super+Alt+M Enter resize mode Super+V Open quickmenu Super+Ctrl+C Open settings Super+Print Take area screenshot to pictures folder Super+Shift+V Open clipboard manager Super+Shift+Esc Open system monitor Super+Ctrl+Print Take area screenshot to clipboard Super+Shift+Print Take fullscreen screenshot to clipboard Super+Ctrl+F Distribute applications between tags Super+Ctrl+I Open instantPACMAN Super+Shift+Up/Down Minimize/Restore window Super+Ctrl+F Toggle temporary fullscreen Super+Shift+F Toggle fake fullscreen Super+F2 Toggle action prefix Super+Shift+P Open external screen settings Super+0 Show all tags Super+Shift+0 Make current window active on all tags Super+Shift+I Open Snapdrop Super+Alt+F Open instantSearch"},{"location":"hotkeys/#terminal","title":"Terminal","text":"Binding Functionality Ctrl+Shift+C Copy Ctrl+Shift+V Paste Ctrl++/- Adjust font size Shift+Left Button Select Text Ctrl+D Close terminal"},{"location":"hotkeys/#mouse","title":"Mouse","text":"Binding Part of the Screen Functionality Scroll Status text Change volume Super+Left Button Status text Open settings Super+Right Button Status text Pause/unpause media Super+Middle Button Status text Mute/unmute audio Super+Scroll Status text Change brightness (laptop only) Super+Shift+Left Button Status text Open audio settings Super+Ctrl+Left Button Status text Notification center Left Button Window title Focus window Middle Button Window title Close window Right Button Window title Put window into master Drag Right Mouse button Window title Resize window Drag Left Mouse button Window title Move window Ctrl+Scroll Window title Resize window and keep aspect ratio Super+Drag left mouse button Window Move window Super+Drag right mouse button Window Resize window Super+Middle Button Window Toggle window between floating and tiling Super+Shift+Drag right mouse button Window Resize window and keep aspect ratio Left Button Desktop Open app launcher Right Button Desktop Open text based app launcher Left Button Status text Open app launcher Middle Button Status text Open Terminal Middle Button Desktop Open super lightweight command runner Right Button Status text Open app switcher Scroll Window bar Switch focus Shift+Scroll Window bar Move Window through stack Super+Left Button Window bar Toggle overlay Super+Right Button Window bar Notification center Super+Left Button Desktop Toggle overlay Super+Right Button Desktop Notification center Scroll Up Desktop Open overlay Scroll Down Desktop Close overlay Left/Right Click Layout indicator Cycle through layouts Super+Left Button Layout indicator Define overlay Middle Button Layout indicator Switch to default layout Left Button Shutdown button Open Shutdown menu Right Button Shutdown button Lock screen Middle Button Shutdown button Lock screen without password Left Button Start menu Open start menu Right Button Start menu Open quick menu Shift+Left Button Start menu Toggle action prefix"},{"location":"hotkeys/#desktop","title":"Desktop","text":"<p>These are only active when there is no window on the current tag</p> Binding Functionality Enter Open terminal A Open instantASSIST F Open browser E Open text editor R Open ranger M Open Spotify N Open file manager V Open quickmenu Y Open text based app launcher Space Open Graphical Launcher F1 See all keybindings Tag Number Switch to Tag Number Tab Open app switcher C Open VS Code +/- change volume H/L go to adjacent tag J/K go to active tag left/right go to adjacent tag up/down go to active tag"},{"location":"installguide/","title":"Installation guide","text":"<p>This is a noob friendly installation guide intended for people who are new to Linux or installing operating systems. If you have already installed any other Linux Distro you can likely skip this guide, but if you're having problems installing, it may still help you.  </p>"},{"location":"installguide/#general-information","title":"General information","text":"<p>Here is some general information on installing Linux Distros that may help you understand what's about to happen. You can skip this section and just follow the \"click on xy, download xyz\" instructions but it may help to understand how things work and what you're doing.</p> <p>To install an operating system you need a live medium. That's a fancy term for saying that you create a copy of that OS on a removable medium like a USB stick or a DVD (although those have fallen out of fashion in recent years) This copy of the OS is a special version that's non-persistent meaning that any changes you make while using it are wiped upon rebooting. It also contains an installer program that can copy the operating system to your computers disk, meaning it will be what the computer is normally running.</p> <p>You then insert the live medium into the computer and boot from it, meaning that you make the computer read the data from it instead of the internal disk. Then you can play around with the live version or start the installer program to create an installation on your computer.</p> <p>After the installation is finished you can shut down the computer, unplug the live medium and upon booting you be greeted with the freshly installed OS.</p>"},{"location":"installguide/#prerequisites","title":"Prerequisites","text":"<p>To install instantOS you'll need a few things. The requirements are generally really low so you're likely fine with anything you have.  </p> <p>You need</p> <ul> <li>USB stick, 1.5GB or larger</li> <li>Computer to install on with</li> <li>5GB of disk space, 8GB or more are recommended</li> <li>64Bit processor</li> <li>An internet connection</li> </ul>"},{"location":"installguide/#installation-steps","title":"Installation steps","text":""},{"location":"installguide/#1-download-iso","title":"1. Download ISO","text":"<p>Head over to https://instantos.io/download and download the latest ISO to your computer (can be any computer, does not have to be the one you plan on installing to).</p>"},{"location":"installguide/#2-download-etcherio","title":"2. Download etcher.io","text":"<p>Next you'll need a piece of software called etcher. it can be downloaded from https://etcher.io and like instantOS is completely free and open source. On Linux the AppImage version is recommended. Other USB burning programs may work as well, although dd has been proven to be problematic, so for the best results it is recommended to use etcher.</p>"},{"location":"installguide/#3-burn-the-usb","title":"3. Burn the USB","text":"<p>This step will wipe the entire USB stick, so back up any data you may have on it elsewhere. After the installation the USB stick can be used to store regular files again. Begin by inserting the USB stick. Start up Etcher and choose the ISO you downloaded in step 1. Next choose the USB drive. Be sure you choose the right one because again, all data on it will be wiped. Then click \"Flash\" and wait until the process has finished. On windows you will need administrator rights and on Linux you will need to enter your root password. If the password prompt does not work you might be missing a polkit GUI.</p>"},{"location":"installguide/#4-boot-from-the-live-medium","title":"4. Boot from the live medium","text":"<p>Shut down the target computer and insert the live medium. Next turn on the target computer. A lot of new computers automatically boot from a live medium if one is detected. If you see an instantOS splash screen, you are done with this step. If that's not the case for you continue with the next instruction. Most computers have a splash screen that briefly appears before continuing the booting process. It usually contains the Logo of the manufacturer. Somewhere, usually below the logo there should be a list of keys that can be pressed while the splash screen is active and a description of what they do. Look for \"boot medium\" or somethings similar, and if that is not there, go for \"BIOS\" or \"setup\". If you missed the key the first time around, shut the computer back down and start repeatedly pressing it as soon as it turns on. If the \"boot medium\" option is available you should get a menu that lists all storage devices that are plugged in. The installation medium is usually called USB flash drive or something similar. Choose that, usually using the arrow keys, newer computers might support a mouse here, and confirm using the enter key. If you don't have the boot device menu and instead have to use the bios, try looking for \"boot order\" and put the live medium as the first item in this list. This process can differ depending on the manufacturer.</p>"},{"location":"installguide/#5-installation","title":"5. Installation","text":"<p>After booting the ISO, confirm the first option in the instantOS splash screen using the enter key to enter the live session. Inside the live session you should have a welcome app with an install entry. Click on that or the applet in the top right to start the installation. This requires a constant internet access, ethernet is recommended. The installer asks a few questions and should be fairly self explanatory. You can select things using either the arrow keys, by searching for items or using the mouse. Confirm options by using the enter key or left clicking. After you input all the information the installation process will begin and the computer will automatically reboot. In case it boots into the live session again, choose \"boot existing OS\" and you should be ready to use instantOS. If you have any questions or need help with something, feel free to ask in any of the places listed in support</p>"},{"location":"instantassist/","title":"instantASSIST","text":"Required skills <p>Shortcuts</p> <p>instantOS comes with instantASSIST, a collection of small little programs that can be accessed using only a few keystrokes.</p> <p>Access it using Super+A. This will pop up a menu showing all available keystrokes. Hovering over a letter will display a short description. Press one of them to activate the corresponding section. Some assists will have multiple options available. They will be displayed in the same menu. Press the key again to go with the default one, press one of the keys listed to execute their corresponding action.  These key combinations are called assists.  </p> <p>For example: The w-assist consists of pressing Super+A to activate the menu and then typing in W.  The w-assist is responsible for quickly changing your wallpaper. It will list some other options. Press w again to execute the default action which is generating a new wallpaper from a random source.</p> <p>The h-assist will list all available assists and their purposes.</p>"},{"location":"instantlock/","title":"lock screen","text":"<p>instantOS uses instantLOCK to lock the screen. Invoke it with Super+Ctrl+L. This will lock the screen with your user password.</p> <p>Unlock the screen by entering your password and confirming with return. All keyboard input will go to entering your password, there is no need to select a text field.</p> <p>Entering a wrong password will make the screen change color and repeat the password prompt</p>"},{"location":"instantlock/#warnings","title":"Warnings","text":"<p>If anyone attempts to unlock the screen with the wrong password, a warning will be displayed at the bottom until the next successful unlock. This will let you know if anyone has been tampering with your computer.</p>"},{"location":"instantlock/#messages","title":"Messages","text":"<p>instantLOCK can be configured to display a message on the lock screen. To do this, run ilock with your message as the first argument. This is purely cosmetical and will not change the actual prompting behaviour</p> <pre><code>ilock \"this is a message\"\n</code></pre>"},{"location":"instantlock/#disable-password-prompt","title":"Disable password prompt","text":"<p>ilock can be configured to not prompt for a password. This can be useful for demo environments or for turning off the screen. In this mode, any keypress will unlock the screen.</p> <pre><code>ilock -o\n</code></pre>"},{"location":"instantlock/#dad-jokes","title":"Dad jokes","text":"<p>instantLOCK can be configured to use dad jokes as a password prompt. This can be enabled in the settings menu.</p>"},{"location":"instantthemes/","title":"instantTHEMES","text":"<p>Warning</p> <p>this page is WIP</p>"},{"location":"instantthemes/#features","title":"Features","text":"<p>instantOS uses a program called instantTHEMES to theme the system. the goal of instantTHEMES is to provide a simple way to create themes that look coherent across the entire system. </p>"},{"location":"instantthemes/#configure-many-parts-of-the-os","title":"Configure many parts of the OS","text":"<p>A theme can declaratively theme the following system components - Mouse Cursor - GTK - Icon theme - Fonts - QT</p>"},{"location":"instantthemes/#extensible","title":"Extensible","text":"<p>instantTHEMES integrates with imosid which allows to include theming configuration for arbitrary programs, all without messing with user configuration</p>"},{"location":"instantthemes/#simple-workflow","title":"Simple workflow","text":"<p>Themes are special packages that can be shared easily and installed with a single command. They include everything instantTHEMES needs to install and apply all parts %% of the theme. </p>"},{"location":"instantthemes/#applyswitch-themes","title":"Apply/switch themes","text":"<pre><code>instantthemes apply themename\n</code></pre> <p>you can list all available themes with</p> <pre><code>instantthemes list\n</code></pre>"},{"location":"instantthemes/#darklight-mode","title":"Dark/Light mode","text":""},{"location":"instantthemes/#creating-themes","title":"Creating themes","text":"<p>TODO</p>"},{"location":"instantthemes/#advanced-command-line-usage","title":"Advanced command-line usage","text":""},{"location":"instantthemes/#querying","title":"Querying","text":"<pre><code>instantthemes query query_expression\n</code></pre> <p>This executes a dasel query on the current theme and puts the results in stdout. you can read more about dasel at https://daseldocs.tomwright.me/selectors/introduction. The dasel query expression is optional. If no expression is passed, the whole theme config file is output instead. </p> <p>Example:</p> <pre><code>~ \uf054 instantthemes query\ndefaultvariant = \"light\"\ndependencies = [\"materia-gtk-theme\", \"papirus-icon-theme\", \"instantcursors\", \"inter-font\"]\nname = \"instantOS\"\nversion = 0\n\n[colors]\n  accent = \"#88B2F6\"\n  background = \"#121212\"\n\n[cursor]\n  size = 16\n  theme = \"elementary-instantos\"\n\n[font]\n  name = \"Inter\"\n  size = 12\n\n[gtk]\n\n  [gtk.dark]\n    theme = \"Materia-dark\"\n\n  [gtk.light]\n    theme = \"Materia\"\n\n[icons]\n  dark = \"Papirus-Dark\"\n  light = \"Papirus\"\n\n[qt]\n\n  [qt.dark]\n    kvantum = \"Materia\"\n    theme = \"kvanum-dark\"\n\n  [qt.light]\n    theme = \"kvantum\"\n~ \uf054\n</code></pre> <p>And example query executed on the same theme</p> <pre><code>~ \uf054 instantthemes query qt.dark\nkvantum = \"Materia\"\ntheme = \"kvanum-dark\"\n~ \uf054\n</code></pre>"},{"location":"layouts/","title":"Layouts","text":"Required skills <p>shortcuts Opening applications</p>"},{"location":"layouts/#basics","title":"Basics","text":"<p>Windows have two modes: Floating and tiling. The default mode is tiling and is the one taking advantage of layouts. The OS automatically assigns a position and size to every window in tiling mode. It does so according to a simple set of rules called a layout.</p> <p>You can see the currently selected layout to the right of the tag indicators.</p>"},{"location":"layouts/#master-and-stack","title":"Master and Stack","text":"<p>Most layouts have two areas, the master and the stack. The master usually contains the main Application you're using like a web browser or text editor while the stack contains additional applications like music players, terminals or file browsers. Some layouts also allow to have multiple applications in the master area</p> <p>Use Super+Shift+Enter to put a window into the master or into the stack if it already is in the master area.</p> <p>Some layouts also allow resizing the master and stack area. The keybinding for this are Super+H and Super+L.</p>"},{"location":"layouts/#reorder-windows","title":"Reorder windows","text":"<p>Super+Ctrl+J and Super+Ctrl+K makes the current window and the window next to it swap places.</p>"},{"location":"layouts/#rundown-of-all-layouts","title":"Rundown of all layouts","text":""},{"location":"layouts/#tile","title":"Tile <code>+</code>","text":"<p>This layout has a master area on the left and a stack area on the right.</p>"},{"location":"layouts/#grid","title":"Grid <code>#</code>","text":"<p>Applications get arranged into a grid where each one gets resized to the same size. It does not distinguish between master or stack.</p>"},{"location":"layouts/#horizontal-stack-1","title":"Horizontal stack 1 <code>===</code>","text":"<p>This works basically the same as the tiling layout except the tiling is done horizontally.</p>"},{"location":"layouts/#horizontal-stack-2-ttt","title":"Horizontal stack 2 <code>TTT</code>","text":"<p>This works basically the same as the Horizontal stack 1 layout, but the stack itself is tiled vertically.</p>"},{"location":"layouts/#monocle-n","title":"Monocle <code>[n]</code>","text":"<p>All windows are Fullscreen and layered on top of each other. The window currently in focus is always on top.</p>"},{"location":"layouts/#floating-_","title":"Floating <code>_</code>","text":"<p>This completely disables window tiling. Use this to get a floating WM like experience.</p>"},{"location":"layouts/#overview-o","title":"Overview <code>O</code>","text":"<p>This is the overview layout. It is used by the overview feature. It stacks all windows in a way that each of them is visible but without resizing them from their previous layout. This can be used to quickly switch between windows.</p>"},{"location":"layouts/#half-stack-d-n","title":"Half stack <code>D n</code>","text":"<p>This is a hybrid of the tiling and monocle layout. The master area is tiled normally, but the stack works like the monocle layout with all windows layered on top of each other.</p>"},{"location":"layouts/#switching-layouts","title":"Switching layouts","text":"<p>You can toggle through all layouts by left/right clicking on the layout indicator or with Super+Ctrl+Comma/Period. Middle clicking on the indicator resets to the default tiling layout. Some layouts also have a direct Shortcut.</p> <p>Here is a list of them</p> <ul> <li>Super+M Monocle</li> <li>Super+T Tiling</li> <li>Super+C Grid</li> <li>Super+F disable layouts</li> </ul>"},{"location":"menusettings/","title":"Customizing instantMENU","text":"<p>instantMENU is the menu that is used for most of the instantOS specific graphical applications. It is a backwards compatible extension of dmenu.</p> <p>More information about writing scripts with instantMENU can be found here</p>"},{"location":"menusettings/#colors","title":"Colors","text":"<p>The colors of instantMENU can be customized through ~/.Xresources</p>"},{"location":"menusettings/#example","title":"Example","text":"<pre><code>instantmenu.norm.fg : #dddddd\ninstantmenu.norm.bg : #191a2a\ninstantmenu.norm.detail : #6e5991\n\ninstantmenu.fade.fg : #9a7acf\ninstantmenu.fade.bg : #191a2a\ninstantmenu.fade.detail : #6e5991\n\ninstantmenu.highlight.fg : #dddddd\ninstantmenu.highlight.bg : #0f0420\ninstantmenu.highlight.detail : #6e5991\n\ninstantmenu.hover.fg : #dddddd\ninstantmenu.hover.bg : #7a64a0\ninstantmenu.hover.detail : #6e5991\n\ninstantmenu.sel.fg : #dddddd\ninstantmenu.sel.bg : #f45dff\ninstantmenu.sel.detail : #d130dd\n\ninstantmenu.out.bg : #f45dff\ninstantmenu.out.detail : #d130dd\n\ninstantmenu.green.fg : #dddddd\ninstantmenu.red.fg : #dddddd\ninstantmenu.yellow.fg : #dddddd\n\ninstantmenu.green.bg : #dddddd\ninstantmenu.red.bg : #dddddd\ninstantmenu.yellow.bg : #dddddd\n\ninstantmenu.green.detail : #dddddd\ninstantmenu.red.detail : #dddddd\ninstantmenu.yellow.detail : #dddddd\n\ninstantmenu.font: FiraCode:size=14\n</code></pre> <p>Applying settings</p> <p>You need to run the command <code>xrdb ~/.Xresources</code> after modifying the file to apply the settings. New settings will not apply to running instances of instantMENU</p> <p>Todo</p> <p>change example xresources to default theme</p>"},{"location":"menusettings/#explanation","title":"Explanation","text":"<p>All settings need to be prefixed with instantmenu (or the wildcard *).</p> <p>Most settings have three sub-settings: fg, bg and detail. Fg is the color of text and fontawesome icons on the entry. Bg is the background color. Detail is the shadow detail that appears below the item when selected. </p> <p>Todo</p> <p>explain out</p>"},{"location":"notify/","title":"Notifications","text":"<p>instantOS has a notification center similar to android. Notifications will appear in a bubble at the top left of the screen, stay there for a while and then automatically disappear. They can also be closed by right clicking on them.</p> <p>Application defined context actions like confirmation prompts or just shortcuts to where the notification comes from are available by left clicking on the bubble.</p>"},{"location":"notify/#notification-center","title":"Notification center","text":"<p>All past notifications are accessible and can be managed in the notification center. The notification center is started with Super+G and can be closed with escape or right clicking on it.</p> <p>Notifications can be read from the notification center by left clicking on them. This opens up the notification menu where the content can be read or managed.</p>"},{"location":"notify/#deleting-notifications","title":"Deleting notifications","text":"<p>Notifications can either be deleted individually by selecting them and choosing the delete option or by pressing Shift+left/right in the notification center where you can delete notifications that contain a certain keyword, come from a specific application or you van just clear all of them.</p>"},{"location":"notify/#paging","title":"Paging","text":"<p>Notifications are persistent between reboots unless specifically removed. This means that over a long period of usage the list can get quite long. In order to keep good performance the notification center only displays up to 700 notifications at a time. If the total number of notifications exceeds 700 then notifications will be divided into pages with 700 notifications each. At the bottom of each page (which can be reachoed by scrolling down) is a next button to load and view the next page.</p>"},{"location":"overlays/","title":"Overlays","text":"<p>Overlays work similar to drop-down terminals like Guake, but are integrated into the WM and work with any application. To create an overlay, press  Super+Ctrl+W or drag a window to the top right corner. You can now toggle the overlay on or off by pressing Super+W or hovering over the corner.</p> <p>The overlay is locked by default which means it can't be closed by accident until it is unlocked. Right clicking on it in the title bar resets its dimensions. Right click dragging on it in the title bar lets you change the size. Positional or horizontal changes will not be permanent until the overlay is unlocked by right clicking on the close button.</p> <p>Declaring a new overlay will replace the old one. The old overlay will return to being a normal window.</p> <p>Alternative way to create an overlay: Super+Click on the layout indicator.</p>"},{"location":"programs/","title":"instantOS specific programs and features","text":""},{"location":"programs/#instantwm","title":"instantWM","text":"<p>The instantOS window manager</p>"},{"location":"programs/#instantassist","title":"instantASSIST","text":""},{"location":"programs/#instantarch","title":"instantARCH","text":"<p>The custom instantOS installer</p> <p>instantPASS</p> <p>An instantMENU GUI for the unix-pass password manager with some extra features</p> <p>instantMENU</p> <p>A backwards compatible fork of dmenu</p> <p>instantPACMAN</p> <p>instantSETTINGS</p> <p>imosid</p> <p>instantSHELL</p> <p>imenu</p> <p>commandfinder</p> <p>instantsearch</p> <p>islide</p> <p>instantLOCK</p> <p>instantNOTIFY</p> <p>instantSTATUS</p> <p>instantOPEN</p>"},{"location":"programs/#todo","title":"TODO","text":"<ul> <li>add screenshots</li> <li>add gifs</li> <li>add small descriptions</li> </ul>"},{"location":"quickmenu/","title":"Quick menu","text":"<p>The quick menu is like a scriptable quick favorites menu. You can access it by pressing Super+V or right clicking on the start menu</p> <p>By default it will be empty and only display the option to close or edit it. You can move your selection by typing in the name of an entry or using the arrow keys. Press enter or click on an entry to confirm your selection.</p> <p>Choosing the \"edit menu\" entry will reveal another set of options</p>"},{"location":"quickmenu/#add-entry","title":"Add entry","text":"<p>Allows you to add a new entry to the quick menu. The entry will be added in the current category which by default is the root directory of quickmenu.</p> <p>First it will prompt you to provide a name. This will be what shows up as the entry in the menu. Any Unix filename is valid here. Next you will have to type in what the entry should be mapped to. All entries are interpreted in a bash shell so you can use as much scripting magic as you like.</p> <p>The option \"enter command\" allows you to quickly type in a command. \"edit script\" opens up a full neovim window that allows you to write multi-line scripts.</p> <p>At the top of the script template are two comments</p> <pre><code># instantosterm\n# instantosarg\n</code></pre> <p>Remove the space between the # and the option to enable that option. instantosterm makes the entry run in a terminal emulator when started. instantosarg makes the entry ask for arguments before running it that are then passed to the script.</p> <p>Not providing an argument for a script that has this enabled will exit quickmenu. You can combine enabling one, both or none of these features.</p>"},{"location":"quickmenu/#examples","title":"Examples","text":""},{"location":"quickmenu/#project-opener","title":"Project opener","text":"<p>This opens up a prompt to enter a project name and quickmenu will open that project in VS Code. fzf will autocomplete the name if there is no exact match for the input name.</p> <pre><code>#!/bin/bash\n# instantosterm\n#instantosarg\n# remove the spaces in front of the above options to enable them\n\ncd ~/workspace\nls | fzf --filter \"$1\" | head -1 &gt; /tmp/workspacecode\ncode \"$(cat /tmp/workspacecode)\"\n</code></pre> <p>Demo </p>"},{"location":"quickmenu/#other-information","title":"Other information","text":"<p>Quickmenu only depends on imenu and instantmenu to run. The setup of all entries is completely portable. It resides in ~/.config/instantos/quickmenu and can be freely moved or copied between different machines.</p>"},{"location":"scratchpad/","title":"Scratchpad","text":"<p>The scratchpad is like a tag that sits on top of all your other tags at all times Its visibility can be toggled on and off using the shortcut Super+S To move a window to the scratchpad you can use Super+Shift+S, moving it out of the scratchpad is done by moving the window to a regular tag. Its functionality in general works a lot like the Steam overlay, if you're familiar with that you'll feel right at home.</p> <p>All windows on the scratchpad are floating and will overlay over anything that's not on the scratchpad including fullscreen windows.</p>"},{"location":"screenshots/","title":"Screenshots","text":"Required skills <p>instantASSIST</p>"},{"location":"screenshots/#keybindings","title":"Keybindings","text":"Binding Functionality Super+Print take screenshot of selected area to the pictures folder Super+Ctrl+Print take screenshot of selected area to the clipboard Super+Shift+Print take fullscreen screenshot to the clipboard installation on third party systems <p>These bindings require instantassist and instantutils to be installed</p>"},{"location":"screenshots/#instantassist","title":"instantASSIST","text":"<p>instantASSIST contains a lot more options to take screenshots that can all be found under the s-assist</p> Assist Functionality <code>ss</code> Take screenshot of area into the pictures folder <code>sc</code> Take screenshot of area into the clipboard <code>sd</code> Wait 5 seconds and take fullscreen screenshot to the clipboard <code>sf</code> Take fullscreen screenshot to the pictures folder <code>si</code> Take area screenshot and upload to imgur <code>su</code> Take area screenshot and upload to file.coffee <code>sa</code> Take screenshot and annotate using flameshot <code>sm</code> Take fullscreen screenshot to the clipboard <code>sm</code> Select and \"freeze\" part of the screen <code>sr</code> Select area and detect and copy text in it"},{"location":"shortcuts/","title":"Shortcuts","text":"<p>instantOS can be controlled using the mouse or the keyboard. If you are a more advanced user, you can likely skip this part of the documentation.</p> <p>All keybindings follow a simple convention: Hold down a set of special keys, also called modifiers, and then press a normal key to do an action. Most keybindings make use of the super key. On most keyboards it will have a Windows logo on it, on a Mac it is the command key.  When noting a keyboard shortcut, the modifiers are listed first, followed by the action key. For example: Super+A refers to holding down the Super key and tapping the A key. Super+Shift+Space refers to holding down both the Super and Shift key (the order doesn't matter) and tapping the Space bar. You can perform multiple actions by keeping the modifier keys held down and pressing a sequence of action keys.</p>"},{"location":"shutdown/","title":"Shutting down","text":"Required skills <p>Shortcuts</p> <p>To shut down your computer, press Super+Ctrl+Q to open the shutdown menu. From there you can choose between multiple options. There also is a shutdown button to the right of the layout indicator. It only appears when all applications on the current tag are closed, encouraging you to do so before shutting down your computer.</p> <ul> <li>Shutdown: Shuts down your computer.</li> <li>Reboot: Shut down the computer and start it back up again.</li> <li>Logout: log out of your user session and go back to the display manager. If your goal is to keep your computer secure while leaving it unattended, you should lock the screen instead.</li> <li>Lock screen: Lock the screen. For more information, refer to the Lock screen article.</li> <li>Restart WM: Restart the window manager. This is only really useful for tampering with it or recovering from a crash or freeze</li> <li>Suspend: keep current ram contents and pause the rest of the system. Can be   used to save battery.</li> <li>Cancel: Closes the menu. You can also close it using the right mouse button or the escape key.</li> </ul>"},{"location":"sticky/","title":"sticky windows","text":"<p>Sticky windows are visible no matter what tags are visible at any time. All sticky windows have a green title bar. They can be either floating or tiled.</p> <p>To make a window sticky, focus it and press Super+Ctrl+S. Pressing Super+Ctrl+S a second time unstickies it.</p> <p>Some special windows behave in similar ways to sticky windows and are also marked with a green title bar. Examples for this include overlays and scratchpad windows.</p>"},{"location":"tags/","title":"Tags","text":"Required skills <p>Shortcuts</p>"},{"location":"tags/#basic-explanation","title":"Basic explanation","text":"<p>Each window is assigned to one or more tags. It is only visible when the tag is active. The tag bar in the top left shows the status of all tags</p> <ul> <li>Dark Blue: The tag is not active with no windows assigned to it</li> <li>Red: The tag is active with no windows assigned to it</li> <li>Green: The tag is active and has the currently active window assigned to it</li> <li>Blue: The tag is not active and has windows assigned to it</li> <li>Yellow: The tag is active and has windows assigned to it</li> </ul>"},{"location":"tags/#basic-actions","title":"Basic actions","text":"<p>You can activate a single tag by clicking its indicator or using Super + the corresponding number key. To move a window to another tag, use Super + Shift + Tag-number. To move a window to a tag and follow it there, use Super + Alt + Tag-number. You can also drag the green indicator to another tag using the mouse. Holding down shift while doing so, follows the window to the corresponding tag. Drag a floating window over a tag indicator to move it there and activate the tag.</p>"},{"location":"tags/#activating-multiple-tags","title":"Activating multiple tags","text":"<p>Multiple tags can be toggled so all windows assigned to these tags become visible. The key binding to do this is Super+Ctrl+Tag-number. Right clicking on the tag indicator achieves the same thing. Actions that focus on a single tag like following a window or clicking on the indicator will deactivate all additional tags.</p>"},{"location":"terminal/","title":"Terminal","text":""},{"location":"terminal/#opening-a-terminal","title":"Opening a terminal","text":"<p>A terminal can be opened up with Enter on an empty tag or Super+Enter at any time. You can also use the mouse by middle clicking on the status bar in the top right. The Super+Space application launcher can also launch any application in a terminal. Press Shift+left/right arrow key while using the launcher to switch ti terminal mode.</p>"},{"location":"terminal/#copy-paste","title":"Copy paste","text":"<p>To highlight text, hold down the shift key and drag out the selection using your mouse. You can then press Ctrl+Shift+C to copy the selected text and Ctrl+Shift+V to paste it.</p>"},{"location":"terminal/#tmux","title":"tmux","text":"<p>By default, all terminals open in a tmux session. This allows for features like tabs, split windows and detaching from the session. Tmux is very well documented so this manual won't go into detail about it.</p> <p>Tmux resources</p> <ul> <li>Cheatsheet</li> <li>Guide</li> </ul>"},{"location":"terminal/#configuration","title":"Configuration","text":"<p>The terminal emulator in use is st-instantos which a build of the suckless terminal. It is nothing special and deliberately kept barebones because most of the things you could add into a terminal emulator can be done much better and reliable using tmux.</p> st-instantos patches and changes <p>This is a list of changes made to the vanilla st source - xresources support - colored emoji - font zooming with ctrl +/- - vertcenter - fira code default font - ligatures - boxdraw - hide cursor - blinking cursor - clipboard fix - w3m support - transparency</p> <p>Colors can be changed from Xresources, but please read this before doing any theming.</p>"},{"location":"terminaltheme/","title":"Theming the terminal","text":""},{"location":"terminaltheme/#general-info","title":"General info","text":"<p>The terminal emulator in use (by default) on instantOS is a custom fork of st.  There is nothing special about it and all features are either from the original codebase or patches, with only some fixes to make different patches work together better. </p> <p>The theming of st-instantos is done through xresources. As with all xresources customisations, config changes need to be put in <code>~/.Xresources</code> and are applied by running <code>xrdb ~/.Xresources</code> and restarting the application being customized (in this case just close and reopen a terminal).</p>"},{"location":"terminaltheme/#colors","title":"Colors","text":"<p>These are the default colors for the terminal found in ~/.Xresources. These apply to most terminal emulators and are in the usual hex color code format. The lines with the exclamation marks are comments and are not required. </p> <pre><code>!black\n*color0: #383c4a\n*color8: #626A7E\n\n!red\n*color1: #E0527E\n*color9: #E7766B\n\n!green\n*color2: #4BEC90\n*color10: #3CBF75\n\n!yellow\n*color3: #D8D782\n*color11: #CFCD63\n\n!blue\n*color4: #5294e2\n*color12: #579CEF\n\n!magenta\n*color5: #CE50DD\n*color13: #E7766B\n\n!cyan\n*color6: #6BE5E7\n*color14: #90FDFF\n\n!white\n*color7: #CCCCCC\n*color15: #FFFFFF\n</code></pre> <p>Info</p> <p>Be sure to run <code>xrdb ~/.Xresources</code> to apply any changes</p> <p>Note</p> <p>instantOS Beta 7 and after will automatically stop updating Xresources after it has been modified to prevent overwriting any customisations. running <code>imosid compile ~/.Xresources</code> will resume updates.</p>"},{"location":"terminaltheme/#font","title":"Font","text":"<p>The xresources entry for setting the terminal font is <code>st.font</code></p> <p>For example, the default font can be set with <pre><code>st.font: Fira Code Nerd Font Mono:pixelsize=15\n</code></pre></p> <p>//TODO tutorial how font names can be found</p>"},{"location":"update/","title":"Updating instantOS","text":"<p>To update instantOS, open a terminal and run <code>yay</code>.  It will prompt you for your root password and to confirm installing the updates.  This tool will update all programs from the official repositories and the AUR</p> <p>Just like with any other Linux distro, you can continue using your computer while installing updates.  Updates to some instantOS components will however require a restart to become visible.</p>"},{"location":"update/#instantupdate","title":"instantupdate","text":"<p>instantos comes with its own update tool that ensures the system keeps working by also applying workarounds and changes to the OS configuration. If you are an experienced user and regularly modify the OS yourself you might want to keep things more predictable and stay with only pacman updates. </p>"},{"location":"vim/","title":"Vim hotkeys","text":"<p>Some keybindings in instantOS make use of the vim movement keys. They are taken from the text editor vim and are also used in lots of other applications. They work like this:</p> <pre><code>        Up\n         ^\n         |\n         k\n left&lt;--h l--&gt;right\n         j\n         |\n         V\n         Down\n</code></pre> <p>They might look strange at first but the reasoning behind them is that they are on the home row and easier to access than the arrow keys when typing. Lots of Linux users are already familiar with them and using existing muscle memory is always good. It also leaves the arrow keys to be used for other functionality.</p>"},{"location":"visibility/","title":"Visibility options","text":"Required skills <p>Shortcuts Tags</p> <p>You can toggle several visual elements of instantOS You can toggle the top bar with Super+B</p> <p>Super+Shift+S hides all tags without a window on them</p> <p>Super+Alt+S changes from tag numbers to symbols. They behave identically but might be easier to remember for some people.</p>"},{"location":"wmsettings/","title":"Customizing instantWM","text":"<p>instantWM is customized through ~/. Xresources</p> <p>The syntax for changing a parameter value is the following</p> <pre><code>instantwm.parameter: value\n</code></pre> <p>After editing ~/. Xresources, run xrdb ~/. Xresources and then restart instantWM</p>"},{"location":"wmsettings/#bar-height","title":"Bar height","text":""},{"location":"wmsettings/#example","title":"Example","text":"<pre><code>instantwm.barheight: 2\n</code></pre> <p>This parameter sets the amount extra rows of pixels that get added to the top and bottom of the title bar.  Putting 0 here would mean the text would touch the bars boundaries. </p> <p>Example of a top bar with the height 2</p> <p></p> <p>Example of a top bar with the height 24</p> <p></p>"},{"location":"wmsettings/#fonts","title":"Fonts","text":"<p>This is the default font.</p> <pre><code>instantwm.font: Cantarell-Regular:size=12\n</code></pre> <p>To change font size, simply change the number at the end. </p> <pre><code>instantwm.font: Cantarell-Regular:size=22\n</code></pre> <p>You can change this to any font you like with any size, granted that you put in the right font name. </p>"},{"location":"wmsettings/#colors","title":"Colors","text":"Full Color list <pre><code>instantwm.hover.normal.win.fg\ninstantwm.hover.minimized.win.fg\ninstantwm.hover.sticky.win.fg\ninstantwm.hover.focus.win.fg\ninstantwm.hover.stickyfocus.win.fg\ninstantwm.hover.overlay.win.fg\ninstantwm.hover.overlayfocus.win.fg\ninstantwm.hover.inactive.tag.fg\ninstantwm.hover.filled.tag.fg\ninstantwm.hover.focus.tag.fg\ninstantwm.hover.nofocus.tag.fg\ninstantwm.hover.empty.tag.fg\ninstantwm.hover.normal.close.fg\ninstantwm.hover.locked.close.fg\ninstantwm.hover.fullscreen.close.fg\ninstantwm.hover.normal.win.bg\ninstantwm.hover.minimized.win.bg\ninstantwm.hover.sticky.win.bg\ninstantwm.hover.focus.win.bg\ninstantwm.hover.stickyfocus.win.bg\ninstantwm.hover.overlay.win.bg\ninstantwm.hover.overlayfocus.win.bg\ninstantwm.hover.inactive.tag.bg\ninstantwm.hover.filled.tag.bg\ninstantwm.hover.focus.tag.bg\ninstantwm.hover.nofocus.tag.bg\ninstantwm.hover.empty.tag.bg\ninstantwm.hover.normal.close.bg\ninstantwm.hover.locked.close.bg\ninstantwm.hover.fullscreen.close.bg\ninstantwm.hover.normal.win.detail\ninstantwm.hover.minimized.win.detail\ninstantwm.hover.sticky.win.detail\ninstantwm.hover.focus.win.detail\ninstantwm.hover.stickyfocus.win.detail\ninstantwm.hover.overlay.win.detail\ninstantwm.hover.overlayfocus.win.detail\ninstantwm.hover.inactive.tag.detail\ninstantwm.hover.filled.tag.detail\ninstantwm.hover.focus.tag.detail\ninstantwm.hover.nofocus.tag.detail\ninstantwm.hover.empty.tag.detail\ninstantwm.hover.normal.close.detail\ninstantwm.hover.locked.close.detail\ninstantwm.hover.fullscreen.close.detail\ninstantwm.nohover.normal.win.fg\ninstantwm.nohover.minimized.win.fg\ninstantwm.nohover.sticky.win.fg\ninstantwm.nohover.focus.win.fg\ninstantwm.nohover.stickyfocus.win.fg\ninstantwm.nohover.overlay.win.fg\ninstantwm.nohover.overlayfocus.win.fg\ninstantwm.nohover.inactive.tag.fg\ninstantwm.nohover.filled.tag.fg\ninstantwm.nohover.focus.tag.fg\ninstantwm.nohover.nofocus.tag.fg\ninstantwm.nohover.empty.tag.fg\ninstantwm.nohover.normal.close.fg\ninstantwm.nohover.locked.close.fg\ninstantwm.nohover.fullscreen.close.fg\ninstantwm.nohover.normal.win.bg\ninstantwm.nohover.minimized.win.bg\ninstantwm.nohover.sticky.win.bg\ninstantwm.nohover.focus.win.bg\ninstantwm.nohover.stickyfocus.win.bg\ninstantwm.nohover.overlay.win.bg\ninstantwm.nohover.overlayfocus.win.bg\ninstantwm.nohover.inactive.tag.bg\ninstantwm.nohover.filled.tag.bg\ninstantwm.nohover.focus.tag.bg\ninstantwm.nohover.nofocus.tag.bg\ninstantwm.nohover.empty.tag.bg\ninstantwm.nohover.normal.close.bg\ninstantwm.nohover.locked.close.bg\ninstantwm.nohover.fullscreen.close.bg\ninstantwm.nohover.normal.win.detail\ninstantwm.nohover.minimized.win.detail\ninstantwm.nohover.sticky.win.detail\ninstantwm.nohover.focus.win.detail\ninstantwm.nohover.stickyfocus.win.detail\ninstantwm.nohover.overlay.win.detail\ninstantwm.nohover.overlayfocus.win.detail\ninstantwm.nohover.inactive.tag.detail\ninstantwm.nohover.filled.tag.detail\ninstantwm.nohover.focus.tag.detail\ninstantwm.nohover.nofocus.tag.detail\ninstantwm.nohover.empty.tag.detail\ninstantwm.nohover.normal.close.detail\ninstantwm.nohover.locked.close.detail\ninstantwm.nohover.fullscreen.close.detail\nnormal.border\nfocus.tile.border\nfocus.float.border\nsnap.border\nstatus.fg\nstatus.bg\nstatus.detail\n</code></pre>"},{"location":"wmsettings/#general","title":"General","text":""},{"location":"wmsettings/#color-types","title":"Color types","text":"<p>Most elements have three colors, bg is mostly used for text, bg is behind the text and should provide good contrast when paired with fg. Additionally detail is used for shading details below the element.</p>"},{"location":"wmsettings/#hover-types","title":"Hover types","text":"<p>Each color property has a variant that is switched to when hovered over with the mouse cursor.  The normal color and the hover variant are called nohover and hover respectively.</p>"},{"location":"wmsettings/#state-types","title":"State types","text":"<p>Each element can be in one of several states, for example a window title can be focussed or minimized. </p>"},{"location":"wmsettings/#element-types","title":"Element types","text":"name description tag tag number indicator win window title close close button on active window title"},{"location":"wmsettings/#examples","title":"Examples","text":"<p>Explicit color declaration</p> <pre><code>instantwm.nohover.focus.tag.bg: #00ff00\ninstantwm.hov.tag.bg: #00ff00\n</code></pre>"},{"location":"wmsettings/#colors-old","title":"Colors - Old","text":"<p>This is the config syntax for instantWM versions of beta 6 and earlier.  Newer versions introduced an updated config that is not compatible with the old one anymore.</p> <p>Warning</p> <p>The names in the old list are deprecated, Xresources written in this syntax will not affect instantWM installations newer than beta 6</p>"},{"location":"wmsettings/#example_1","title":"Example","text":"<pre><code>instantwm.minimizedColor : #747c90\ninstantwm.bgColor : #292f3a\ninstantwm.hoverShadowColor : #475166\ninstantwm.hoverBgColor : #596377\ninstantwm.minimize : #b77ca7\ninstantwm.darkMinimize : #8b3b93\ninstantwm.darkActiveTag : #b7416e\ninstantwm.activeTag : #e16a98\ninstantwm.hoverFocus : #82ceaa\ninstantwm.darkHoverFocus : #5ea584\ninstantwm.darkFocus : #447a61\ninstantwm.focus : #5ea584\ninstantwm.border : #912e54\ninstantwm.activeBorder : #5ea584\ninstantwm.close : #e16a98\ninstantwm.darkClose : #b7416e\ninstantwm.hoverClose : #d37492\ninstantwm.darkHoverClose : #ce577c\ninstantmenu.norm.fg : #dddddd\ninstantmenu.norm.bg : #292f3a\ninstantmenu.norm.detail : #3e485b\ninstantmenu.fade.fg : #575e70\ninstantmenu.fade.bg : #292f3a\ninstantmenu.fade.detail : #3e485b\ninstantmenu.highlight.fg : #dddddd\ninstantmenu.highlight.bg : #353d4b\ninstantmenu.highlight.detail : 3e485b\ninstantmenu.hover.fg : #dddddd\ninstantmenu.hover.bg : #353d4b\ninstantmenu.hover.detail : #3e485b\ninstantmenu.sel.fg : #dddddd\ninstantmenu.sel.bg : #5ea584\ninstantmenu.sel.detail : #3e485b\ninstantmenu.out.fg : #dddddd\ninstantmenu.out.bg : #5ea584\ninstantmenu.out.detail : #5ea584\ninstantmenu.green.fg : #dddddd\ninstantmenu.green.bg : #bde077\ninstantmenu.green.detail : #b7ce42\ninstantmenu.red.fg : #dddddd\ninstantmenu.red.bg : #e16a98\ninstantmenu.red.detail : #b7416e\ninstantmenu.yellow.fg : #dddddd\ninstantmenu.yellow.bg : #fea63c\ninstantmenu.yellow.detail : #cb8735\n</code></pre> <p>This example is taken from the dotfiles of https://github.com/XeroOl</p>"},{"location":"development/colors/","title":"Colors","text":"<p>Warning</p> <p>this page is WIP</p> <p>this is a reference for the default color scheme of instantOS</p> color name code light blue #89B3F7 blue #536DFE dark background #121212"},{"location":"development/ibuild/","title":"ibuild dev tools","text":""},{"location":"development/ibuild/#general","title":"General","text":"<p>There are a few tools that provide easy access to features intended for development and testing of instantOS projects.  You can install them by going into Settings-&gt;instantOS-&gt;Development tools.</p>"},{"location":"development/ibuild/#installing-instantos-projects-from-source","title":"installing instantOS projects from source","text":"<p>This requires ibuild to be installed. Once that is installed, the usage is</p> <pre><code>ibuild install packagename\n</code></pre> <p>This installs the package packagename from the default branch of the project on GitHub.  Just running ibuild install without a second argument gives you a list of all packages that can be built using the tool. Be sure to never install liveutils on a system that is not a live session</p>"},{"location":"development/ibuild/#more-ibuild-trickery","title":"more ibuild trickery","text":"<p>In general, if ibuild is missing an argument it will give you an fzf list of all options available to you.</p> <pre><code>ibuild help\n</code></pre> <p>will give you a short explanation of the basic options</p>"},{"location":"development/iconf/","title":"instantCONF","text":"<p>instantCONF provides the cli tool iconf which acts as a really simple sqlite based key value store. </p>"},{"location":"development/iconf/#usage","title":"Usage","text":"<p>Get the value of a setting option Prints the value to stdout.  Exits with exit code 1 if the option is not set <pre><code>iconf optionname\n</code></pre></p> <p>Set an option</p> <pre><code>iconf optionname value\n</code></pre>"},{"location":"development/iconf/#binary-values","title":"binary values","text":"<p>Get a binary value. doesn't print to stdout and instead exits with exit code 0 if option is true and 1 if the option is set to false.  Defaults to false (exit status 1) <pre><code>iconf -i optionname\n</code></pre></p> <p>set a binary option.  <pre><code>iconf -i optionname 0/1\n</code></pre></p>"},{"location":"development/iconf/#default-values","title":"Default values","text":"<pre><code>iconf optionname:defaultvalue\n\n# example\n\n$ iconf doesnotexist:helloworld\nhelloworld\n</code></pre> <p>this gives the value of optionname if it is set, otherwise this will output 'defaultvalue'</p>"},{"location":"development/imosid/","title":"imosid","text":"<p>imosid stands for \"instant manager of sections in dotfiles\". </p> <p>It aims to solve a core problem when working with dotfiles:</p> <p>If the distro developer changes a default setting, the user should get the new default with an update. If the user has changed the default, the changed version should not be overridden. </p> <p>A side effect of imosid's core functionality is that it reimplements much of what stow does and can be considered a (non drop-in!!!) replacement. </p> <p>Imosid allows for automated config systems that do not interfere with user customisation. </p>"},{"location":"development/imosid/#general-information","title":"General information","text":"<p>Imosid works by dividing dotfiles into sections marked by special comments. These sections can be updated, deleted or modified independently of one another. User-modified sections are ignored by imosid but do not interrupt or otherwise impact the processing of other unmodified sections. </p> <p>For a section to be considered unmodified it needs intact beginning and ending comment and a comment that contains the hash of the section content.  If any of the marker comments have incorrect syntax, are missing or the hash of the section content does not match the hash in the comment then the section is considered modified. </p> <p>Again, breaking the syntax of a section or modifying any part of it still leaves other sections fully functional and processable by imosid. </p>"},{"location":"development/imosid/#terminology","title":"Terminology","text":""},{"location":"development/imosid/#section","title":"Section","text":"<p>A part of a file that has a beginning, ending and hash marker.</p> <pre><code>#...sectionname begin\n#...sectionname hash 123aojd981uenc821y3\necho This is the section content\n#...sectionname end\n</code></pre>"},{"location":"development/imosid/#updating-a-section","title":"Updating a section","text":"<p>Replace the section content with something different and update the hash comment. The new content is often from a newer (completely unmodified) version of the same file</p>"},{"location":"development/imosid/#compiling-a-section","title":"Compiling a section","text":"<p>Insert/modify a hash comment to match the section content. This will make the section be considered as not user-modified. The section can then be overridden by updates or be used to update other files.  <pre><code>#...sectionname begin\n#...sectionname hash 123aojd981uenc821y3\necho This is the section content, it has been modified\n#...sectionname end\n</code></pre></p> <p>Becomes</p> <pre><code>#... sectionname begin\n#... sectionname hash DF4F6F0FCDB6664A62C61406F4FF8BCF3978DF7507B13BEDBC0F10D449B1E1DD\necho This is the section content, it has been modified\n#... sectionname end\n</code></pre>"},{"location":"development/imosid/#section-syntax","title":"Section syntax","text":"<p>Imosid supports a wide range of different file formats and automatically detects the comment syntax. This means that all imosid comments start with <code>//</code> if the file being processed is c source code and <code>\\#</code> if the file is a shell script. For the purposes of all examples, <code>#</code> will be used as the placeholder for any kind of language/format specific commenting syntax.</p> <p>All imosid comments begin with the comment syntax followed by \"...\"  and the name of the section they are a part of.</p> <p>Example <pre><code>#...helloworld begin\n</code></pre> This marks the beginning of the section hello world</p>"},{"location":"development/imosid/#metafiles","title":"Metafiles","text":"<p>Some file formats do not allow for comments either because they have no defined comment syntax or because the application using the the file automatically removes comments (glances in the direction of flameshot and whatever cfg parser it is using). In order to support imosid management for files without comments metadata, imosid records information about them in a separate <code>filename.imosid.toml</code> file. This approach provides some basic imosid functionality without comments but does not allow for multiple sections in one file.</p> <p>//TODO: document how metafiles work</p>"},{"location":"development/imosid/#commands","title":"Commands","text":""},{"location":"development/imosid/#update","title":"update","text":"<pre><code>imosid update targetfile\n</code></pre> <ul> <li>updates target file from sources</li> <li>requires upstream source comments</li> </ul> <p>Example</p> <p>hello.txt</p> <pre><code>#...sectionname2 begin\n#...sectionname2 hash asduvhnw42377\n#...sectionname2 source https://example.com/myfile.txt\nContent\n#...sectionname2 end\n</code></pre> <pre><code>imosid update hello.txt \n</code></pre> <p>This command will fetch  https://example.com/myfile.txt  and if that file contains a section called sectionname2  it will update the section in hello.txt to match sectionname2 in https://example.com/myfile.txt. </p>"},{"location":"development/imosid/#apply","title":"Apply","text":"<pre><code>imosid apply sourcefile\n</code></pre> <ul> <li>requires target comment</li> <li>applies all sections present in all files</li> </ul> <p>Example</p>"},{"location":"development/imosid/#compile","title":"Compile","text":"<pre><code>imosid compile\n</code></pre> <ul> <li>regenerates section hashes</li> <li>creates main section if not present already</li> <li>respect special 1st line like hashbangs</li> </ul>"},{"location":"development/imosid/#check","title":"check","text":"<pre><code>imosid check /path/to/dotfiles_directory\n</code></pre>"},{"location":"development/imosid/#problems","title":"Problems","text":"<ul> <li>section updates can clash with existing configs</li> <li>duplicate key detection?</li> <li>keep sections to a single function?</li> </ul>"},{"location":"development/imosid/#syntax","title":"Syntax","text":"<pre><code>#... all target /path/to/targetfile\n#...sectionname begin\n#...sectionname hash 123aojd981uenc821y3\n#...sectionname source /usr/share/instantdotfiles/stuff\nContent\n#...sectionname end\n\n#...sectionname2 begin\n#...sectionname2 hash asduvhnw42377\n#...sectionname2 source https://raw.github.stuff\nContent\n#...sectionname2 end\n</code></pre>"},{"location":"development/imosid/#installation","title":"Installation","text":"<pre><code>cargo install imosid\n</code></pre>"},{"location":"development/imosid/#disclaimer","title":"Disclaimer","text":"<p>imosid is my first time using rust, the program is in an extremely basic state. Syntax and options are still subject to change</p>"},{"location":"development/instantARCH/","title":"instantARCH","text":"<p>instantARCH is the custom made installer being used for instantOS. It is a netinstall based around instantmenu and written in bash.</p>"},{"location":"development/instantARCH/#use-testing-branch","title":"Use testing branch","text":"<pre><code>ibuild instantarchtest [branchname]\n</code></pre> <p>This lets you select the branch you want to run and opens up a debug menu when the installer is started</p>"},{"location":"development/instantARCH/#debugging-mode","title":"Debugging mode","text":"<p>Debugging mode is enabled by either exporting the environment variable INSTALLDEBUG or by creating the file /tmp/installdebug. It opens a debug menu after each step and allows for pausing, cancelling or continuing the installation.</p> <p>you can put an identifier in /tmp/debugname that is then put in the log file in order to be able to later recognize a testing installation</p>"},{"location":"development/instantMENU/","title":"instantMENU","text":"<p>instantMENU is a general purpose menu that is used for most GUIs in instantOS. It is a superset of dmenu and can be used as a drop-in replacement.</p>"},{"location":"development/instantMENU/#markup","title":"Markup","text":"<p>The appearance of entries can be changed by prefixing them with a special markup syntax. This syntax will not be rendered (apart from the changes in appearance) but will still be present in stdout when selecting an entry</p>"},{"location":"development/instantMENU/#comment-syntax","title":"Comment syntax","text":"<p>Comments are entries that cannot be selected as output of instantmenu. They will still render as text and can also be searched and scrolled through. Their primary purpose is to display more information about the entries that are selectable.</p> <pre><code>    echo 'this entry will be selectable\n&gt; this entry will not be selectable but will still display' | instantmenu\n</code></pre> <p>Entries can also be styled with the default color pallete</p> <pre><code>    echo 'this entry will be selectable\n&gt;&gt;b this entry will not be selectable and will display as blue' | instantmenu\n</code></pre>"},{"location":"development/instantMENU/#color","title":"Color","text":""},{"location":"development/instantMENU/#info","title":"Info","text":"<p>Colored entries render with the specified color on hover over. Apart from that they display and behave just like normal entries.  You are not allowed to put a space after the color specifier.</p> <pre><code>echo ':bHello world' | instantmenu\n</code></pre>"},{"location":"development/instantMENU/#color-specifiers","title":"Color specifiers","text":"Color Code green g red r highlight h yellow y blue b"},{"location":"development/instantMENU/#example","title":"Example","text":"<pre><code>echo ':bThis is blue\n:yThis is yellow\n:rThis is red\n:gThis is green\nThis is normal' | instantmenu -l\n</code></pre>"},{"location":"development/instantMENU/#icon-syntax","title":"Icon syntax","text":"<p>Icon entries are regular selectable entries that are prefixed with an icon and a color. The icon also has a color that shows on hover over. They require the argument <code>-h 1</code> to be present in order to render properly. <pre><code>echo ':b \uf303Icon' | instantmenu -h -1\n      \u2191\u2191 \u2191\u2191\n      || ||\n      || ||\n      || ||\n      || |Entry text\n      || Nerd fonts icon displayed in front of the entry text\n      |The icon color will be green\n      Colons indicate that an entry will have styling\n</code></pre></p> <p>The iconset in use is Nerd Fonts, a collection of icons that includes the Font Awesome icon set and can be searched through</p>"},{"location":"development/instantMENU/#grid-syntax","title":"Grid syntax","text":"<pre><code>seq 20 | instantmenu -g 4 -l 5\n</code></pre> <p>gives a grid of 5x5 entries. The grid is filled from left to right and top to bottom with the individual lines from stdin. </p> <p></p>"},{"location":"development/instantMENU/#imenu","title":"imenu","text":"<p>Imenu is a wrapper around instantmenu that allows fast creation of common types of user interfaces using instantMENU.</p>"},{"location":"development/instantMENU/#usage","title":"Usage","text":"<pre><code>-c &lt;title&gt; [-i]\n   confirmation prompt, pass -i to invert the result\n-C &lt;title&gt;\n   multi line confirmation prompt with message from stdin\n-P &lt;prompt name&gt;\n   password prompt\n-w &lt;message&gt;\n   display loading message\n-e &lt;message&gt;\n   display error message\n-i &lt;title&gt;\n   ask user for a single line of input\n-m &lt;message&gt;\n   display message\n-M\n   display multi line message from stdin\n-t\n   display toast message\n-l\n   choose item from stdin\n-b\n   checkbox list to choose multiple items from stdin\n-E &lt;addcommand&gt;\n   edit list from stdin, adding an item executes &lt;addcommand&gt;\n</code></pre>"},{"location":"development/instantMENU/#exmaples","title":"Exmaples","text":"<p><pre><code>imenu -m 'this is a test message'\n</code></pre> </p>"},{"location":"development/status/","title":"Status bar customisation","text":""},{"location":"development/status/#setting-the-status","title":"Setting the status","text":"<p>Setting the status in instantWM works the same as for dwm.</p> <pre><code>xsetroot -name \"status text\"\n</code></pre> <p>instantOS ships with its own status text generator. If you want to set your own status text you first need to disable the built in solution. This can be done in Settings-&gt;instantOS-&gt;Status bar</p> Note"},{"location":"development/status/#planned-status-bar-program","title":"Planned status bar program","text":"<p>It is planned to create a statusbar similar to dwmblocks that can run different status scripts at different intervals and then generates a complete status text that can be used by the window manager. It will however not be based on dwmblocks and will have a lot more features. dwmblocks is not used because it lacks some crucial features to make it work with the featureset of instantWM</p>"},{"location":"development/status/#runtime-configuration","title":"Runtime configuration","text":"<p>Customizing the status bar will not require recompiling it. Instead it will have a config file using the toml format</p>"},{"location":"development/status/#markup","title":"Markup","text":"<p>The status bar will automatically add markup to status widgets to separate them from each other. Widgets can however also communicate with the bar to for example change their color on runtime.</p>"},{"location":"development/status/#validation","title":"Validation","text":"<p>The markup parser currently in use in instantWM will crash the entire window manager if there is an error in the markup syntax. The planned status bar will perform validation on all config and status text so it is impossible to configure it in a way that will crash the window manager.</p>"},{"location":"development/status/#rust","title":"Rust","text":"<p>Following imosid this will be the second instantOS project written in rust</p>"},{"location":"development/status/#progress","title":"Progress","text":"<p>At the moment this is all just plans, no code for the status bar has been written yet as development is still focussed on making the operating system more stable before piling on even more features</p>"},{"location":"development/status/#styling","title":"Styling","text":"<p>The appearance of text in the status bar can be changed by using special markup syntax.  The markup parser of instantWM is based on the status-2d patch for dwm. </p> <p>All Markup commands have the following format <pre><code>^commandnamecommandargument^\n</code></pre></p> <p>They have a \"\\^\" as suffix and prefix. The opening caret is immediatly followed by the command name which is then (without a separator) followed by the argument.</p>"},{"location":"development/status/#colors","title":"Colors","text":"<pre><code>^c#ff0000^ this text have a red background ^d^ this text will have the default background color\n^t#ff0000^ this text have a red foreground ^d^ this text will have the default background color\n</code></pre>"},{"location":"development/status/#offsets","title":"Offsets","text":"<pre><code>^f11^there will be an 11px gap in front of this text\n</code></pre>"},{"location":"development/status/#reset","title":"Reset","text":"<pre><code>^d^text after this is reset to the default styling\n</code></pre>"},{"location":"development/status/#icons","title":"Icons","text":"<p>// TODO</p>"},{"location":"development/status/#clickable-applets","title":"Clickable applets","text":"<p>// TODO</p> <p>Note</p> <p>This feature is not just lacking documentation There is just a very early implementation of this in the window manager that at the moment is not remotely ready for use</p>"},{"location":"gaming/gamebegin/","title":"Getting started with gaming on Linux and gaming on instantOS","text":"<p>This article is meant to get you started with gaming on Linux as a new user coming from Windows or Consoles. It aims to build an understanding of Linux Gaming from the ground up and avoid what I call \"ecosystem confusion\". </p> <p>You can get surprisingly deep into a piece of documentation without an overview of what anything actually does and how it relates to everything else. This guide will build up an understanding of linux gaming and hopefully equip you with the tools to troubleshoot (or avoid) your own problems. </p> <p>It will also go much more in depth than most tutorials and include many tips to make and keep gaming on linux more convenient. It contains lots of information that is for some reason really hard to google for that will still benefit 99% of linux gamers. Just as an example: \"How do I find the savegames for my steam games\" sounds like it should be simple to google for, yet it is not and I have not yet found anyone publicly mentioning the method described in this guide. </p>"},{"location":"gaming/gamebegin/#overview","title":"Overview","text":"<p>Here is a basic overview of the ways to play games on linux</p> <ol> <li>Native games<ul> <li>Games from the official repositories: These can be installed using your   package manager and can be launched from the super + y menu. This is the   most convenient and reliable method of aquiring games. They are almost   guaranteed to work and are automatically kept up to date when the system   updates. However the number of games that can be installed this way is very small</li> <li>Flatpak/AppImage/Snap games are installed from alternative package   managers. They are sandboxed which means that they work on all distros   and have excellent backwards compatibility. Even very old   games should work on a modern os with modern hardware. The tradeoff is   that these require more storage and ram than the other methods. </li> <li>Manually downloaded games: This is the method of aquiring software that   will be most familiar to windows users. Download a program from the web   and run it. This is however not recommended on Linux as   the game might require other things to be installed on your system and   will not automatically install them. If you run into this problem,   try running the game from a terminal and check if there are error   messages hinting at what the game requires to be installed.</li> <li>Steam: Steam is a very popular game store that has a native linux version.   After installing steam from the package manager the experience of using   it is identical to windows when it comes to games which have a native   linux version. </li> </ul> </li> <li> <p>Windows games</p> <ul> <li>Wine:   Wine is a program that allows windows programs to run on Linux. You   point it at a .exe file and it will try to run it. Using wine directly   can be a bit tricky. Not all programs will work with just the stock   installation of wine. Lots of games require additional windows software   to be installed. This can be done with a program called winetricks. There   are also numerous programs that extend the functionality of wine. dxvk   allows using directx in wine, nvapi adds support for dlss and raytracing.   It can be helpful to have an understanding of the workings of these   individual programs but in most cases the methods below are more   convenient. </li> <li>Steam Play:   Steam has the ability to run windows games with a feature called   Steam-Play. Steam-Play makes use of a program called proton. Proton is a   collection of programs like wine and dxvk along with scripts and tweaks   that make them work together. Steam play also automatically installs any   additional windows programs that the game might need, meaning you don't   have to make use of winetricks and don't have to manually set up dxvk or   change any wine settings. </li> <li>Lutris:   Lutris is a game launcher that can launch all game types here   including windows games. It runs windows games using wine and functions   as an alternative to proton. Just like proton it also sets up wine, dxvk   and nvapi automatically. It also has a database of games along with user   submitted installers for them. Lutris allows for much more control over   your wine installation than proton. It has a user friendly graphical   interface for changing wine settings and with enough tinkering allows   getting almost any game to work </li> <li>Legendary/Heroic:   Heroic is an open source alternative to the epic games   launcher. It can download and play games from the epic game store. It   makes use of the command line tool legendary to communicate with the epic   games servers. Similarly to lutris it allows configuring wine for   specific games. It also has support for running games with proton which   in most cases yields better results. </li> <li>Bottles/PlayOnLinux:   PlayOnLinux is a program very similar to lutris, but contrary to what the name may suggest is focussed on running non-gaming software. It probably has its uses but from my testing you have to invest a lot more time into it to get a result that is compa   PlayOnLinux almost never works   Better for non-gaming software</li> </ul> </li> <li> <p>Using the official repositories. There are some games that are completely    free and open source. These are available in the default repositories (aka App    store). But because most games are commercial products, this leaves you with a    very small library of titles that are often just tech demos for game engines    that have not aged well...</p> </li> <li>Steam native: Steam is a digital games store that has excellent support for    Linux. It has hundreds of thousands of high quality games, many of which run    on Linux.</li> <li>Steam Play: Linux has the ability to run Windows games using a tool called    proton. It is developed by Valve and is to wine what Linux Distributions are    to the Linux kernel. The steam client has a feature called steam play that    allows downloading windows games from steam and playing them using proton.    By default, steam play is only enabled for titles that are guaranteed to    work, but you can enable it for all games in the settings. Many games are    only unofficially supported but run just fine using proton. Protondb is a    website that lists games and how well they run using proton.</li> <li>Lutris: Lutris is a game launcher with a corresponding website which    contains thousands of community made installers. It allows playing native    games, can be used as a launcher for steam games and games running in an    emulator and most interestingly, comes with its own wine versions.</li> <li> <p>Legendary/Heroic: Heroic is an open source reimplementation of the epic    games launcher. It allows you to download games from the epic game store and    play them using wine or proton. It utilizes the command line program    legendary to handle communication with the epic games servers. It is also    possible to use legendary directly without going through the heroic launcher</p> </li> <li> <p>setup guide</p> </li> <li>compare different methods</li> </ol>"},{"location":"gaming/gamebegin/#native","title":"Native","text":"<p>//TODO</p>"},{"location":"gaming/gamebegin/#windows","title":"Windows","text":""},{"location":"gaming/gamebegin/#overview_1","title":"Overview","text":""},{"location":"gaming/gamebegin/#wine","title":"Wine","text":""},{"location":"gaming/gamebegin/#basics","title":"Basics","text":"<p>Wine is a program that allows using windows programs on linux. It is different from an emulator because it runs on bare metal and achieves near native performance, sometimes even surpassing windows. </p> <p>In basic terms, programs can defer some tasks to the operating system so that the developer doesn't need to worry about them too much. This includes things like sound, windowing and basic GUI elements. The problem is that the instructions that programs can send to windows are different than those that linux accepts. The job of wine is to catch these instructions and translate them into their linux equivalent. </p>"},{"location":"gaming/gamebegin/#prefixes","title":"Prefixes","text":"<p>One difference between Windows and Linux is that Linux does not have a C-drive and the folder structure is different. Wine solves this problem through a feature called prefixes. A wine-prefix is a folder on your harddrive that wine uses as a virtual C drive. Everything that a program would write to the c drive if it were running on windows gets written to the prefix folder instead. This opens up interesting possibilities as each prefix acts as a separate installation of windows. In contrast to a real windows installation however a wine prefix is only in the hundreds of megabytes and can be created and deleted quickly and cheaply. </p>"},{"location":"gaming/gamebegin/#versions","title":"Versions","text":"<p>The two main versions of wine are stable and staging. Stable is the standard version which is missing the latest features but the features that are there can generally be relied upon. Staging is a version ahead of the stable version and contains unstable versions of features that will eventually end up in stable. Proton, which will be covered later also contains a version of wine with some custom patches. </p>"},{"location":"gaming/gamebegin/#steam-play","title":"Steam Play","text":"<p>Steam Play is a feature included in the steam client for linux that allows playing windows games on linux through a program called proton. SteamPlay automatically installs any windows programs a game might need meaning you do not have to mess with winetricks to get a game working. </p>"},{"location":"gaming/gamebegin/#verified-titles","title":"Verified titles","text":"<p>Titles verified to be working with SteamPlay are listed on the steam store and can be launched from the library as if they were native. Any hacks and extra steps will automatically be applied. </p>"},{"location":"gaming/gamebegin/#unverified-titles","title":"Unverified titles","text":"<p>It is possible to use SteamPlay with any steam game regardless of wether it has been verified by valve. This can yield mixed results but in most cases proton is mature enough to at least get you a playable experience. To use this, go to settings-&gt;steam Play-&gt;Enable steam play for all other titles. Also make sure that the proton version beneath that checkmark is set to the latest one available</p>"},{"location":"gaming/gamebegin/#titles-not-on-steam","title":"Titles not on steam","text":"<p>It is possible to play games not aquired from steam and even other game stores like ubisoft connect through proton inside the steam client. Steam has a built in menu to add non-steam games to the library. However the GUI for this is buggy and confusing and should best be avoided. </p> <p>//TODO describe steam UI issues</p> <p>Instead there is a tool called steamtinkerlaunch. Install it using <code>yay -S steamtinkerlaunch</code> and then run <code>steamtinkerlaunch addnonsteamgame</code> in a terminal. This opens up a dialog. Set the game name, set Exe to the location of the .exe file of the game and click create. Start steam-runtime and the game should be in your library. Finally, right click on the game, go to compatibility and check \"force the use of a specific Steam Play compatibility tool\". Select A proton version as the compatibility tool, in most cases proton experimental or proton-ge works best. After that the game should be playable on steam. </p>"},{"location":"gaming/gamebegin/#where-is-the-wine-prefix","title":"Where is the wine prefix?","text":"<p>You might notice that proton does not use ~/.wine as a wine prefix </p> <p>//TODO link to explanation of wine prefix</p> <p>proton creates a separate wine prefix for each game, located in ~/.local/share/Steam/steamapps/compatdata/gameid</p> <p>Unfortunately all games just have meaningless id numbers as folder names making it quite hard for beginners to figure out which folder contains the data for which game. The steam client does not have any features to get the ID for a game and especially for non-steam games the IDs cannot even be googled for as they are unique to your installation. </p> <p>The solution is a tool called protontricks. It can be installed from the AUR and running it from a terminal brings up a window which lists all games along with their name, icon and ID. inside the id folder there is a folder called pfx which is a normal wine prefix and contains the savegame at the same path where it would be on windows. You can also add the pfx folder as a wine prefix to ludusavi to keep track of your save files. </p>"},{"location":"gaming/gamebegin/#proton","title":"Proton","text":"<p>Proton is a collection of programs and scripts developed by valve that work together to make windows games run on Linux. It includes wine, dxvk openxr and many more. While the versions of programs included in proton might have a few patches applied to them it is important to mention that proton is not a fork of wine. Valve made proton work so well by contributing improvements to wine and dxvk which in turn benefit all projects making use of them, not just proton. </p> <p>//TODO more stuff</p> <p>Proton is not meant to be used outside of SteamPlay. Apart from steam and heroic there aren't any well maintained wrappers for proton. Using it manually is a chore and whenever you do anything wrong it hard crashes. Manually using proton requires knowledge of the source code and it requires less time and effort to use wine through lutris. </p>"},{"location":"gaming/gamebegin/#protonup","title":"Protonup","text":"<p>protonup is a simple program used to manage and update your wine and proton installations in steam, lutris and heroic. </p>"},{"location":"gaming/gamebegin/#gloriouseggroll","title":"GloriousEggroll","text":"<p>Thomas Crider, also known as GloriousEggroll is a RedHat Engineer who maintains a fork of wine and a fork of proton based around that fork of wine. These versions are more up to date than their lutris and valve counterparts and contain game specific fixes and optimisations. They also have support for AMD FSR which allows running any game at a lower resolution and then upscaling it to the native monitor resolution. This allows for more performance while only losing a small amount of detail. </p> <p>//TODO</p> <p>Bulletpoints - windowing     - fullscreen wine         - minimize fixes it         - i3 auto fixes it     - virtual desktop - versions     - stable     - staging     - ge     - proton     - proton-ge</p>"},{"location":"gaming/gamebegin/#emulation","title":"Emulation","text":"<p>Console emulators allow you to play console games on your PC. This practice isn't unique to Linux. There are emulators available for linux, windows, macos, android and even for newer consoles. There are lots of resources on emulation in general so this wiki will only cover linux specific things to keep in mind when doing emulation on Linux.</p>"},{"location":"gaming/gamebegin/#dolphin","title":"Dolphin","text":"<p>Dolphin is a Wii and GameCube emulator. It is one of the most polished and maintained emulators available and the native linux version runs great. </p>"},{"location":"gaming/gamebegin/#retroarch","title":"Retroarch","text":"<p>Retroarch is a multi-system emulator. It can emulate a wide range of different consoles through a single application. It is available for tons of different platforms and works basically the same everywhere. Yet, there are a few mention worthy differences to the linux version.</p>"},{"location":"gaming/gamebegin/#no-core-updater","title":"No Core-Updater","text":"<p>The windows and android version of Retroarch have a Menu entry that allows downloading new cores (Cores are basically the runtimes for consoles). This option is not present on Linux which can frequently trip up new users. Installing new cores is done through the package manager. Cores typically have the name libretro-corename. </p>"},{"location":"gaming/gamebegin/#missing-icons-and-fonts","title":"Missing icons and fonts","text":"<p>Your installation of retroarch might also have a bunch of missing icons and fonts. This is because retroarch offers multiple different graphical user interfaces and installing all of them even though only one of them will end up being used is a waste of storage. Just like the cores these cannot be aquired through a menu inside of retroarch and instead are also present in distro packages. To install the missing parts of the default user interface install <code>retroarch-assets-ozone</code></p>"},{"location":"gaming/gamebegin/#cemu","title":"Cemu","text":"<p>Cemu is a Wii U emulator. At the time of writing it is only available for Windows. However, it runs nearly perfect using Wine. </p>"},{"location":"gaming/gamebegin/#installation","title":"Installation","text":"<p>//TODO</p>"},{"location":"gaming/gamebegin/#info","title":"Info","text":"<p>Cemuhook works perfectly as of wine 7.1</p> <p>Using a smartphone as a motion sensor works like on Windows</p> <p>Cemu has native vulkan support that works great through wine. OpenGL performs worse and less reliable. Make sure that Graphics API is set to Vulkan in options-&gt;general settings-&gt;Graphics</p> <p>Info</p> <p>The Cemu team has published plans to make Cemu open-source and to create a Linux Port. This page was written in February 2022 and might be outdated once the Cemu team (hopefully) follows through on their plans</p>"},{"location":"gaming/gamebegin/#caveats","title":"Caveats","text":""},{"location":"gaming/gamebegin/#poor-performance-on-older-kernels","title":"Poor performance on older kernels","text":"<p>From around 2020 to the beginning of 2021 Cemu had massive performance issues on Linux. I have not tested if the issue was eventually fixed by a driver, wine, kernel or cemu update. If you are experiencing poor performance with Cemu on Linux, try using an arch based distro or Ubuntu Release newer than 20.04. </p>"},{"location":"gaming/gamebegin/#dualsense-controller-support","title":"Dualsense Controller Support","text":"<p>The PS5 Dualsense controller does not work out of the box and requires extra setup. It gets detected as a valid sdl controller but does not have correct input mapping. This issue can be fixed by using ds360 //TODO add link</p>"},{"location":"gaming/gamebegin/#info_1","title":"Info","text":""},{"location":"gaming/gamebegin/#which-desktop-environmentwindow-manager","title":"Which Desktop environment/Window manager","text":"<p>Desktop environments are usually not a good choice for gaming because they have higher latency than window managers and often have mouse accelleration enabled. Games windows often behave in strange ways that desktop environments are often not tested for. Examples of odd behaviour games might show on desktop environments but not on most window managers include: - Fullscreen windows appearing on the wrong monitor and not being able to move them - Fps games being unable to trap the mouse cursor. This causes it to leave the   game window when doing a big enough turn which then means left clicking makes   the game lose focus and you need to refocus it to regain control - Fps games trapping the mouse on the wrong monitor. This causes the game to   lose focus everytime you left click as you are unable to move the cursor onto   the game window - Forced compositing which can cause frameskips and sometimes forces vsync - Mouse inputs on fullscreen being offset or not registered at all - Some windows are immovable</p> <p>The two best environments for running games are from my testing i3 and instantwm</p>"},{"location":"gaming/gamebegin/#but-window-managers-are-hard","title":"But window managers are hard...","text":"<p>Games represent a unique use case for window managers because they only require really basic knowledge of a window manager to play games on it and because you are spending all your time in a single window you can even be really slow at using them and it doesn't matter because you will only need to use them to open and close the game. In the case of instantWM you do not even lose most of the perks afforded by a desktop environment.</p>"},{"location":"gaming/gamebegin/#i3","title":"i3","text":"<p>I will concede the position of best window manager for gaming to i3wm. Despite my best efforts, it is better than instantwm if all you are doing is playing a game. Just like instantwm it has the ability to move fullscreen windows between monitors and workspaces and can force arbitrary window sizes on games. Its latency is comparable to that of instantWM</p> <p>It does however include a few features that make its game compatibility outgrow that of instantWM. i3wm includes an automatic workaround for wine windows going black after losing focus. It does not have problems with mouse inputs being offset which some games have on instantWM. Some window events on wine can cause windows to become immobable on desktop environments and drift downwards on instantWM. i3wm does not have those issues and also supports moving wine windows by their native titlebar.  i3wm also has a systray which not all desktop environments have and which can be a bit buggy with wine applications</p>"},{"location":"gaming/gamebegin/#instantwm","title":"instantWM","text":"<p>//TODO proper shortcut markup</p> <p>After losing focus some wine windows can go completaly black and freeze. This issue is resolved by minimizing the window with super+ctrl+h or super+shift+up and restoring it with super+shift+down. Some window managers, including dwm lack the ability to minimize windows which makes them unfit for many windows games. </p> <p>//TODO fakefullscreen</p> <p>// In progress</p>"},{"location":"gaming/gamebegin/#testing-different-window-managersdesktops-with-games","title":"Testing different window managers/desktops with games","text":"<ul> <li>awesome Prey</li> </ul> <p>Fullscreen problems - Not in fullscreen, immovable window - Squished aspect ratio - Offset mouse input - FSR not working</p> <p>i3wm - Pros     - No black screen when switching away from fullscreen games     - Mouse input always works - Problems     - Moving fullscreen games between monitors breaks FSR and mouse input</p> <ul> <li>Mate<ul> <li>Fullscreen doesn't fill whole screen</li> <li>Game freezes when switching to borderless windowed</li> <li>Cursor gets stuck on frozen game</li> </ul> </li> <li> <p>Cinnamon</p> <ul> <li>Fullscreen doesnt fill entire window</li> <li>Black screen after alttab, no way of restoring with minimizing through taskbar</li> </ul> </li> <li> <p>Gnome</p> <ul> <li>Fullscreen doesnt fill screen</li> <li>Black screen after switching away more than 3 times</li> <li>Possible to get mouse stuck <ul> <li>Get out by alttabbing, quitting using keyboard</li> </ul> </li> </ul> </li> <li> <p>LXQT</p> <ul> <li>Minimizing works</li> <li>FSR doesnt cover full screen</li> <li>Switching to windowed works</li> <li>Mouse input works</li> <li>Switching to tty and back freezes entire desktop Problem of fullscreen not covering entire screen now everywhere, I broke something...</li> </ul> </li> </ul> <p>Fix for fullscreen: start game on desired monitor with borderless windowed, switch to fullscreen</p>"},{"location":"gaming/gaming/","title":"gaming on instantOS","text":"<p>This guide is targeted at users switching from another Linux distro. For people new to Linux gaming in general, there (insert link) is this article.</p> <p>Dependencies that provide support for most games can be installed using</p> <pre><code>yay -S wine-staging steam lutris dxvk-bin proton-ge-custom-bin heroic-games-launcher-bin\n</code></pre>"},{"location":"gaming/gaming/#features-useful-for-gaming","title":"Features useful for gaming","text":"<p>If there is only one non-floating window visible, it automatically becomes borderless You can disable the status bar by pressing Super + B to make it use the full screen.</p> <p>It is recommended to disable the compositor while gaming. This improves performance and latency.  You can do that by pressing Super + A and typing in c Repeat the same to turn it back on.</p> <p>If a wine game freezes, minimizing and unminimizing it usually solves the issue.  It is recommended to play wine games with steam play or Lutris wine versions as they contain more gaming related patches and are more up to date. Just make sure you always select the newest version of wine when using Lutris. If the game still behaves weird (transparent splash screens are often problematic), enable virtual desktop in Lutris and/or winecfg.</p> <p>Fakefullscreen is really helpful for lots of games, especially ones running in wine virtual desktops</p>"},{"location":"gaming/gaming/#todo-feature-documentation","title":"todo feature documentation","text":"<ul> <li>fakefullscreen</li> <li>forceresize</li> <li>hidebar</li> <li>redraw</li> <li>latency</li> <li>nocompositing</li> <li>steam installer preinstalled</li> <li>switch away from any game</li> <li>overlays for discord</li> </ul>"}]}